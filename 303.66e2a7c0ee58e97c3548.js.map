{"version":3,"file":"303.66e2a7c0ee58e97c3548.js","mappings":"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","sources":["webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://my-3d-portfolio/./src/components/PortfolioSection.js"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n \nconst FILTERS = ['all', 'PowerBI'];\n \nconst portfolioItems = [\n  {\n    id: 1,\n    type: 'PowerBI',\n    src: './assets/Imagerender1.webp',\n    description: 'This is an image description for item 1.',\n    images: [\n      './assets/Imagerender1.webp',\n      './assets/Imagerender2.webp',\n      './assets/Imagerender3.webp', // More images for the item\n    ],\n    videoUrl: 'https://www.youtube.com/embed/tZc1T28Oe20', // Video URL for item 1\n  },\n  {\n    id: 5,\n    type: 'PowerBI',\n    src: './assets/Imagerender2.webp',\n    description: 'This is an image description for item 2.',\n    images: [\n      './assets/Imagerender2.webp',\n      './assets/Imagerender4.webp', // More images for the item\n    ],\n    videoUrl: 'https://www.youtube.com/embed/EVWK63G3Lf8', // Video URL for item 2\n  },\n  {\n    id: 6,\n    type: 'PowerBI',\n    src: './assets/Imagerender2.webp',\n    description: 'This is an image description for item 3.',\n    images: [\n      './assets/Imagerender2.webp',\n      './assets/Imagerender5.webp', // More images for the item\n    ],\n    videoUrl: 'https://www.youtube.com/embed/8fPSmTUGj1Q', // Video URL for item 3\n  },\n  {\n    id: 7,\n    type: 'PowerBI',\n    src: './assets/Imagerender2.webp',\n    description: 'This is an image description for item 4.',\n    images: [\n      './assets/Imagerender2.webp',\n      './assets/Imagerender6.webp', // More images for the item\n    ],\n    videoUrl: 'https://www.youtube.com/embed/tZc1T28Oe20', // Video URL for item 4\n  },\n];\n \nconst PortfolioSection = () => {\n  const [filter, setFilter] = useState('all');\n  const [selectedItem, setSelectedItem] = useState(null);\n \n  useEffect(() => {\n    document.body.style.overflow = selectedItem ? 'hidden' : 'auto';\n  }, [selectedItem]);\n \n  const filteredItems = useMemo(\n    () => (filter === 'all' ? portfolioItems : portfolioItems.filter(item => item.type === filter)),\n    [filter]\n  );\n \n  const renderItemContent = (item) => (\n    <img src={item.src} alt={`${item.type} preview`} loading=\"lazy\" />\n  );\n \n  return (\n    <motion.div\n      className=\"portfolio-modern-section\"\n      initial={{ opacity: 0, y: 80 }}\n      whileInView={{ opacity: 1, y: 0 }}\n      transition={{ duration: 1, ease: 'easeOut' }}\n      viewport={{ once: true, amount: 0.3 }}\n    >\n      {/* Filter Bar */}\n      <div className=\"portfolio-filter-bar\">\n        {FILTERS.map((type) => (\n          <button\n            key={type}\n            className={`filter-btn ${filter === type ? 'active' : ''}`}\n            onClick={() => setFilter(type)}\n          >\n            {type.charAt(0).toUpperCase() + type.slice(1)}\n          </button>\n        ))}\n      </div>\n \n      {/* Grid Items */}\n      <motion.div\n        className=\"portfolio-grid\"\n        variants={{\n          animate: { transition: { staggerChildren: 0.1 } },\n        }}\n        initial=\"initial\"\n        animate=\"animate\"\n      >\n        <AnimatePresence mode=\"wait\">\n          {filteredItems.map(item => (\n            <motion.div\n              key={item.id}\n              className=\"portfolio-card\"\n              onClick={() => setSelectedItem(item)}\n              variants={{\n                initial: { opacity: 0, y: 20, scale: 0.95 },\n                animate: { opacity: 1, y: 0, scale: 1 },\n                exit: { opacity: 0, y: 20, scale: 0.95 },\n              }}\n              transition={{ duration: 0.4, ease: 'easeInOut' }}\n            >\n              {renderItemContent(item)}\n            </motion.div>\n          ))}\n        </AnimatePresence>\n      </motion.div>\n \n      <AnimatePresence>\n        {selectedItem && (\n          <motion.div\n            className=\"portfolio-modal-overlay\"\n            onClick={() => setSelectedItem(null)}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            <motion.div\n              className=\"portfolio-modal-inner\"\n              onClick={(e) => e.stopPropagation()}\n              initial={{ opacity: 0, scale: 0.95 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.95 }}\n              transition={{ duration: 0.3 }}\n            >\n              {/* Description */}\n              <div className=\"portfolio-modal-description\">\n                <h2>Description</h2>\n                <p>{selectedItem.description}</p>\n              </div>\n \n              {/* Gallery of Images */}\n              <div className=\"portfolio-modal-gallery\">\n                {selectedItem.images.map((image, index) => (\n                  <img key={index} src={image} alt={`Image ${index + 1}`} />\n                ))}\n              </div>\n \n              {/* Video */}\n              {selectedItem.videoUrl && (\n                <div className=\"portfolio-modal-video\">\n                  <iframe\n                    src={selectedItem.videoUrl}\n                    title=\"Related Video\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                  />\n                </div>\n              )}\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.div>\n  );\n};\n \nexport default PortfolioSection;\n \n\n "],"names":["PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","L","Fragment","undefined","has","isEveryExitComplete","isExitComplete","FILTERS","portfolioItems","type","src","description","images","videoUrl","PortfolioSection","filter","setFilter","selectedItem","setSelectedItem","useEffect","body","overflow","filteredItems","item","React","motion","div","className","opacity","y","whileInView","transition","duration","ease","viewport","once","amount","concat","onClick","charAt","toUpperCase","slice","variants","animate","staggerChildren","scale","exit","alt","loading","renderItemContent","e","stopPropagation","image","index","title","allow","allowFullScreen"],"sourceRoot":""}